<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans   
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd   
    http://www.springframework.org/schema/tx   
    http://www.springframework.org/schema/tx/spring-tx-3.2.xsd  
    http://www.springframework.org/schema/context  
    http://www.springframework.org/schema/context/spring-context-3.2.xsd  
    http://www.springframework.org/schema/mvc  
    http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">

	 <!-- 自定义Realm实现 -->  
    <bean id="myRealm" class="hxk.interceptor.CustomRealm" />  
	
	 <!-- Shiro Filter 拦截器相关配置 -->  
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">  
        <!-- securityManager -->  
        <property name="securityManager" ref="securityManager" />  
        <!-- 登录路径 -->  
        <property name="loginUrl" value="/login.jsp" />  
        <!-- 登录成功后跳转路径 -->  
        <property name="successUrl" value="/index.jsp" />  
        <!-- 授权失败跳转路径 -->  
        <property name="unauthorizedUrl" value="/forbid.jsp" />  
        <!-- 过滤链定义 -->  
        <property name="filterChainDefinitions">  
            <value>  
                <!-- 注意这里需要把前缀写全.../shiro这里 -->
            	/shiro/loginPage.do*=anon
            	/shiro/login.do*=anon
                /login.jsp* = anon  
                /admin.jsp*=authc,perms[/admin]
                /role.jsp*=authc,roles[role]
                /** = authc
             </value>  
        </property>  
    </bean>  
  
  
    <!-- 缓存相关配置  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!begin -->  
    <!-- securityManager -->  
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">  
        <property name="realm" ref="myRealm" />  
        <!-- 配置ehcache缓存,如果是本机,没分布式的话,可以考虑就选择ehcache缓存 -->
         <property name="cacheManager" ref="shiroEhcacheManager" />
         <!-- 如果有多台机子的话,可以考虑部署redis分布式缓存.. -->
         <property name="sessionManager" ref="sessionManager" />
    </bean>  
    
    <!-- 用户授权信息Cache, 采用EhCache，需要的话就配置上此信息 -->
    <bean id="shiroEhcacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManagerConfigFile" value="classpath:ehcache-shiro.xml" />
    </bean>
    
    
     <!--保持 Session 到 Redis-->
    <bean id="redisManager" class="hxk.util.redis.RedisManager"/>

	<!-- 配置redis的ＤＡＯ -->
    <bean id="redisSessionDAO" class="hxk.util.redis.RedisSessionDAO">
        <property name="redisManager" ref="redisManager"/>
        <property name="timeToLiveSeconds" value="1800"/>
    </bean>

	<!-- 配置shiro提供的session管理者.. -->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="sessionDAO" ref="redisSessionDAO" />
        <!-- sessionIdCookie的实现,用于重写覆盖容器默认的JSESSIONID -->  
        <property name="sessionIdCookie" ref="sharesession" />  
    </bean>
    
    
    
    <!-- 这里很重要,配置每次读取的cookie的名字..不会因为cookie的问题而读取到不同(错误的)jessessionid..
    	   目的就是让用户整个访问过程中,项目读取到用户浏览器的同一个cookie..就会有一样的jessessionid..
     -->
    <!-- sessionIdCookie的实现,用于重写覆盖容器默认的JSESSIONID -->  
    <bean id="sharesession" class="org.apache.shiro.web.servlet.SimpleCookie">  
        <!-- cookie的name,对应的默认是 JSESSIONID -->  
        <constructor-arg name="name" value="SHAREJSESSIONID" />  
        <!-- jsessionId的path为 / 用于多个系统共享jsessionId -->  
        <property name="path" value="/" />  
        <property name="httpOnly" value="true"/>  
    </bean>  
     <!-- 缓存相关配置  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!end -->  
   
    
    
    
    
    
    
    <!--  注解需要的bean !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!BEGIN-->
    
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
    
    	<!-- Support Shiro Annotation 必须放在springMVC配置文件中 -->

	<!-- 异常处理，权限注解会抛出异常，根据异常返回相应页面 -->
	<bean
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="org.apache.shiro.authz.UnauthorizedException">unauth</prop>
				<prop key="org.apache.shiro.authz.UnauthenticatedException">login</prop>
			</props>
		</property>
	</bean>
	<bean
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
		depends-on="lifecycleBeanPostProcessor" />
	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>
	<!-- end -->
    <!--  注解需要的bean !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!END-->
	
</beans>  