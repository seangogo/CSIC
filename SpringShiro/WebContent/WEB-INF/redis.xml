<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.2.xsd">

  
   <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">  
        <property name="maxActive" value="32"></property>  
        <property name="maxIdle" value="6"></property>  
        <property name="maxWait" value="18000"></property>  
        <property name="minEvictableIdleTimeMillis" value="300000"></property>  
        <property name="numTestsPerEvictionRun" value="3"></property>  
        <property name="timeBetweenEvictionRunsMillis" value="60000"></property>  
        <property name="whenExhaustedAction" value="1"></property> 
        <property name="testOnBorrow"  value="true"/>  
    </bean>
      
    <bean id="jedisPool" class="redis.clients.jedis.JedisPool" destroy-method="destroy">  
        <!-- config -->  
        <constructor-arg ref="jedisPoolConfig"></constructor-arg>  
        <!-- host -->  
        <constructor-arg value="127.0.0.1"></constructor-arg>  
        <!-- port -->  
        <constructor-arg value="6379"></constructor-arg>  
        <!-- timeout -->  
        <constructor-arg value="1800000"></constructor-arg>  
        <!-- password -->  
       <!--  <constructor-arg value="0123456"></constructor-arg>   -->
        <!-- database index -->  
       <!--  <constructor-arg value="12"></constructor-arg>         -->
    </bean>  
    
    <!-- 
    		分布式配置redis集群 : 
    		// jedis shard信息配置 ,可以通过配置多个redis的bean..来给下面的sharepool注入..
			<bean id="jedis.shardInfo" class="redis.clients.jedis.JedisShardInfo">  
			    <constructor-arg index="0" value="*.*.*.*" />  
			    <constructor-arg index="1" value="6379" />  
			</bean>  
			  
			//jedis shard pool配置 
			<bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool">  
			    <constructor-arg index="0" ref="jedisPoolConfig" />  
			    <constructor-arg index="1">  
			        <list>  
			            <ref bean="jedis.shardInfo" />  
			        </list>  
			    </constructor-arg>  
			</bean>  
     -->
     
     <!-- 
     		一些配置说明 :
     		
     		JedisPool的配置参数大部分是由JedisPoolConfig的对应项来赋值的。

				maxActive：控制一个pool可分配多少个jedis实例，通过pool.getResource()来获取；如果赋值为-1，则表示不限制；如果pool已经分配了maxActive个jedis实例，则此时pool的状态为exhausted。
				
				maxIdle：控制一个pool最多有多少个状态为idle(空闲)的jedis实例；
				
				whenExhaustedAction：表示当pool中的jedis实例都被allocated完时，pool要采取的操作；默认有三种。
							WHEN_EXHAUSTED_FAIL  表示无jedis实例时，直接抛出NoSuchElementException；
							WHEN_EXHAUSTED_BLOCK 则表示阻塞住，或者达到maxWait时抛出JedisConnectionException；
							WHEN_EXHAUSTED_GROW 则表示新建一个jedis实例，也就说设置的maxActive无用；
				
				maxWait：表示当borrow一个jedis实例时，最大的等待时间，如果超过等待时间，则直接抛出JedisConnectionException；
				
				testOnBorrow：在borrow一个jedis实例时，是否提前进行alidate操作；如果为true，则得到的jedis实例均是可用的；
				
				testOnReturn：在return给pool时，是否提前进行validate操作；
				
				testWhileIdle：如果为true，表示有一个idle object evitor线程对idle object进行扫描，如果validate失败，此object会被从pool中drop掉；这一项只有在timeBetweenEvictionRunsMillis大于0时才有意义；
				
				timeBetweenEvictionRunsMillis：表示idle object evitor两次扫描之间要sleep的毫秒数；
				
				numTestsPerEvictionRun：表示idle object evitor每次扫描的最多的对象数；
				
				minEvictableIdleTimeMillis：表示一个对象至少停留在idle状态的最短时间，然后才能被idle object evitor扫描并驱逐；这一项只有在timeBetweenEvictionRunsMillis大于0时才有意义；
				
				softMinEvictableIdleTimeMillis：在minEvictableIdleTimeMillis基础上，加入了至少minIdle个对象已经在pool里面了。如果为-1，evicted不会根据idle time驱逐任何对象。如果minEvictableIdleTimeMillis>0，则此项设置无意义，且只有在timeBetweenEvictionRunsMillis大于0时才有意义；
				
				lifo：borrowObject返回对象时，是采用DEFAULT_LIFO（last in first out，即类似cache的最频繁使用队列），如果为False，则表示FIFO队列；
				
				其中JedisPoolConfig对一些参数的默认设置如下：
				testWhileIdle=true
				minEvictableIdleTimeMills=60000
				timeBetweenEvictionRunsMillis=30000
				numTestsPerEvictionRun=-1
      -->

</beans>